C51 COMPILER V9.59.0.0   LCD                                                               06/27/2025 22:06:12 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE LCD
OBJECT MODULE PLACED IN .\Objects\LCD.obj
COMPILER INVOKED BY: D:\Keil5\C51\BIN\C51.EXE LCD.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\LCD.lst
                    -) TABS(2) OBJECT(.\Objects\LCD.obj)

line level    source

   1          #include <LCD.h>
   2           
   3          void Read_busy()
   4          {
   5   1        LCD_databus = 0X00;
   6   1        DI = 0;
   7   1        RW = 1;
   8   1        EN = 1;
   9   1        while(LCD_databus & 0x80)
  10   1        {;}
  11   1        EN = 0;
  12   1      }
  13          
  14          void write_LCD_command(uint8 value) //写命令函数
  15          {
  16   1        Read_busy();
  17   1        DI = 0; //0:写指令
  18   1        RW = 0; //0:写操作
  19   1        LCD_databus = value;
  20   1        EN = 1; //EN下降沿锁存有效数据
  21   1        _nop_();
  22   1        _nop_();
  23   1        _nop_();//空指令，短暂延时
  24   1        EN = 0;
  25   1      }
  26          
  27          void write_LCD_data(uint8 value)  //写数据函数
  28          {
  29   1        Read_busy();
  30   1        DI = 1; //1:写数据
  31   1        RW = 0; //写操作
  32   1        LCD_databus = value;
  33   1        EN = 1; //EN下降沿锁存有效数据
  34   1        _nop_();
  35   1        _nop_();
  36   1        _nop_();//空指令，短暂延时
  37   1        EN = 0;
  38   1      }
  39          
  40          void Set_page(uint8 page) //设置显示起始页
  41          {
  42   1        page = 0xB8 | page; //页的首地址为0xB8
  43   1        write_LCD_command(page);
  44   1      }
  45          
  46          void Set_line(uint8 startline)  //设置显示起始行
  47          {
  48   1        startline = 0xC0 | startline;
  49   1        write_LCD_command(startline);
  50   1      }
  51          
  52          void Set_column(uint8 column) //设置显示的列
  53          {
  54   1        column = column & 0x3F; //列的最大值为64
C51 COMPILER V9.59.0.0   LCD                                                               06/27/2025 22:06:12 PAGE 2   

  55   1        column = column | 0x40; //列的首地址为0x40
  56   1        write_LCD_command(column);
  57   1      } 
  58          
  59          void SetOnOff(uint8 onoff)  //显示开关函数，0x3E:关 0x3F:开
  60          {
  61   1        onoff = 0x3E | onoff; //onoff为0时关显示，为1时开显示
  62   1        write_LCD_command(onoff);
  63   1      }
  64          
  65          void SelectScreen(uint8 screen) //选择屏幕
  66          {
  67   1        switch(screen)
  68   1        {
  69   2          case 0:CS1 = 0;CS2 = 0;CS3=0;break;//全屏
  70   2          case 1:CS1 = 0;CS2 = 1;CS3=1;break;//左半屏
  71   2          case 2:CS1 = 1;CS2 = 0;CS3=1;break;//右半屏
  72   2          case 3:CS1 = 1;CS2 = 1;CS3=0;break;//右半屏
  73   2          default:break;
  74   2        }
  75   1      }
  76          
  77          void ClearScreen(uint8 screen)  //清屏
  78          {
  79   1        uint8 i,j;
  80   1        SelectScreen(screen);
  81   1        for(i=0;i<8;i++)
  82   1        {
  83   2          Set_page(i);
  84   2          Set_column(0);
  85   2          for(j=0;j<64;j++)
  86   2          {
  87   3            write_LCD_data(0x00); //写入0，地址指针自动加1
  88   3          }
  89   2        }
  90   1      }
  91          
  92          void InitLCD()
  93          {
  94   1        Read_busy();
  95   1        SelectScreen(0);
  96   1        SetOnOff(0);
  97   1        SelectScreen(0);
  98   1        SetOnOff(1);
  99   1        SelectScreen(0);
 100   1        ClearScreen(0);
 101   1        Set_line(0);
 102   1      }
 103          
 104          void show_num(uint8 screen,uint8 page,uint8 column,uint8 *p)//(屏幕，列，行，数据地址)
 105          {
 106   1        uint8 i;
 107   1        SelectScreen(screen);
 108   1        Set_page(page);
 109   1        Set_column(column);
 110   1        
 111   1        for(i=0;i<8;i++)  //采用16*8的字模
 112   1        {
 113   2          write_LCD_data(p[i]);
 114   2        }
 115   1        
 116   1        Set_page(page+1);
C51 COMPILER V9.59.0.0   LCD                                                               06/27/2025 22:06:12 PAGE 3   

 117   1        Set_column(column);
 118   1        for(i=0;i<8;i++)  //采用16*8的字模,"小四号字"
 119   1        {
 120   2          write_LCD_data(p[i+8]);
 121   2        }
 122   1      }
 123          
 124          
 125          
 126          void show_ch(uint8 screen,uint8 page,uint8 column,uint8 *p)//(屏幕，列，行，数据地址)
 127          {
 128   1        uint8 i;
 129   1        SelectScreen(screen);
 130   1        Set_page(page);
 131   1        Set_column(column);
 132   1        
 133   1        for(i=0;i<16;i++) //采用16*16的字模
 134   1        {
 135   2          write_LCD_data(p[i]);
 136   2        }
 137   1        
 138   1        Set_page(page+1);
 139   1        Set_column(column);
 140   1        for(i=0;i<16;i++) //采用16*16的字模,"小四号字"
 141   1        {
 142   2          write_LCD_data(p[i+16]);
 143   2        }
 144   1      }
 145          
 146          void show_im(uint8 screen,uint8 page,uint8 column,uint8 *p)
 147          {
 148   1        uint8 i;
 149   1        SelectScreen(screen);
 150   1        Set_page(page);
 151   1        Set_column(column);
 152   1      
 153   1        for(i=0;i<32;i++) //采用32*32的字模
 154   1        {
 155   2          write_LCD_data(p[i]);
 156   2        }
 157   1        
 158   1        Set_page(page+1);
 159   1        Set_column(column);
 160   1        for(i=0;i<32;i++) //采用32*32的字模
 161   1        {
 162   2          write_LCD_data(p[i+32]);
 163   2        }
 164   1        
 165   1        Set_page(page+2);
 166   1        Set_column(column);
 167   1        for(i=0;i<32;i++) //采用32*32的字模
 168   1        {
 169   2          write_LCD_data(p[i+64]);
 170   2        }
 171   1        
 172   1        Set_page(page+3);
 173   1        Set_column(column);
 174   1        for(i=0;i<32;i++) //采用32*32的字模
 175   1        {
 176   2          write_LCD_data(p[i+96]);
 177   2        }
 178   1      }
C51 COMPILER V9.59.0.0   LCD                                                               06/27/2025 22:06:12 PAGE 4   

 179          
 180          
 181          
 182          
 183          
 184          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    509    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      18
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
